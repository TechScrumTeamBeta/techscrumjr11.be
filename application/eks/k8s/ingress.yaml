apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: alb-ingress-class
  namespace: backend
  annotations:
    ingressclass.kubernetes.io/is-default-class: 'true'
spec:
  controller: ingress.k8s.aws/alb
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alb-ingress
  namespace: backend
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: petlover-prod-ingress-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    #alb.ingress.kubernetes.io/healthcheck-path: /api/v2/health_check
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200-399'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:ap-southeast-2:650635451238:certificate/06484957-ddd1-47a8-be11-ea36c2f204bc'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
spec:
  ingressClassName: alb-ingress-class
  #defaultBackend:
  #service:
  #name: techscrumjr11
  #port:
  #number: 80
  rules:
    - host: eks-api.techscrumjr11.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: techscrum
                port:
                  number: 80
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: techscrum
                port:
                  number: 80       